import "@cadl-lang/rest";
import "@cadl-lang/openapi";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-ranch-expect";

using Cadl.Http;
using Azure.Core.Operations;

@serviceTitle("MapPropertiesBasicClient")
@serviceVersion("1.0.0")
@server("http://localhost:3000", "TestServer endpoint")
@doc("Illustrates input, output, and round-trip models with required map type properties.")

namespace Cadl.TestServer.MapPropertiesBasic;

@doc("Input model with map properties")
model InputModel {

  @doc("Required map from string to string.")
  requiredStringStringMap: Map<string, string>;

  @doc("Required map from string to int.")
  requiredStringIntMap: Map<string, int32>;

  @doc("Required map from int to string.")
  requiredIntStringMap: Map<int32, string>;

  @doc("Required map from int to int.")
  requiredIntIntMap: Map<int32, int32>;
}

@doc("Output model with map properties")
model OutputModel {

  @doc("Required map from string to string.")
  requiredStringStringMap: Map<string, string>;

  @doc("Required map from string to int.")
  requiredStringIntMap: Map<string, int32>;

  @doc("Required map from int to string.")
  requiredIntStringMap: Map<int32, string>;

  @doc("Required map from int to int.")
  requiredIntIntMap: Map<int32, int32>;
}

@doc("Round-trip model with map properties")
model RoundTripModel {

  @doc("Required map from string to string.")
  requiredStringStringMap: Map<string, string>;

  @doc("Required map from string to int.")
  requiredStringIntMap: Map<string, int32>;

  @doc("Required map from int to string.")
  requiredIntStringMap: Map<int32, string>;

  @doc("Required map from int to int.")
  requiredIntIntMap: Map<int32, int32>;
}

@scenario
@scenarioDoc("Generate and send input model with required map properties.")
@route("/models")
@post
op sendMapModel(@body input: InputModel): Response<200> | ErrorResponse;

@scenario
@scenarioDoc("Generate and receive output model with required map properties.")
@route("/models")
@get
op getMapModel(): OkResponse<OutputModel> | ErrorResponse;

@scenario
@scenarioDoc("Generate, send, and receive round-trip model with required map properties.")
@route("/models")
@put
op setMapModel(@body input: RoundTripModel): OkResponse<RoundTripModel> | ErrorResponse;
